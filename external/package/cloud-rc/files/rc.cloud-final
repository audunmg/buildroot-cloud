#!/bin/sh
# vi: ts=4 expandtab

. /usr/share/cloud-rc/rc.cloud-functions

oracle_generate_interfaces() {
        grep ''  /sys/class/net/*/address | sed 's#.*net/\([a-z0-9]*\)/address:\(.*\)#{"\2":"\1"}#' |jq -s -c > ${STATE_D}/interfaces.json
        mdget vnics ${STATE_D}/vnics.json
        echo -e "# interface file auto-generated by cloud-rc\n\nauto lo\niface lo inet loopback\n" > /etc/network/interfaces 
        # Only the first interface, since it's special (DHCP).
        cat ${STATE_D}/vnics.json | jq --slurpfile ifaces ${STATE_D}/interfaces.json '.[0] | (.macAddr|ascii_downcase) as $mac | .ifname = ($ifaces[]|to_entries[]|select(.key == $mac)).value | "allow-hotplug "+.ifname+"\niface "+.ifname+" inet dhcp\n"' -r >> /etc/network/interfaces
        # FIXME: add the rest of the interfaces.
}


start() {
    local iid="" iip="" eip="" uptime="" lanif="" _hostname=""
    read uptime cputime < /proc/uptime
    msg "===== ${XN}: system completely up in ${uptime} seconds ===="
    lanif=$(ip link| sed -n '/^[0-9]: e/s/[0-9]: *\(e[^:]*\).*/\1/p'| head -1)
    is_nocloud && return 0

    get_vars
    [ -z ${_iid} ] &&
        { msg "failed to read instance id"; return 1; }
    iid=${_iid}

    if echo "$_iid" | busybox grep -q ^ocid; then
        if ! grep -q cloud-rc /etc/network/interfaces; then
            echo Generate /etc/network/interfaces:
            oracle_generate_interfaces
        fi
        mdget vnics/0/privateIp && iip=${_RET}
        eip='unknown'
    else
        mdget public-ipv4 && eip=${_RET}
        mdget local-ipv4 && iip=${_RET}
    fi

    cat <<EOF | tee -a /dev/console
  instance-id: ${iid}
  hostname: ${_hostname}
  public-ipv4: ${eip}
  local-ipv4 : ${iip}
EOF
    
    ip addr show dev ${lanif} | awk -v lanif=${lanif} '/inet/ { print "  " lanif " IP: " $2 }' | tee -a /dev/console
}

case "$1" in
        stop)
                exit 0
                ;;
        reload|start|restart)
                # start, since that's all there is.
                start;;
        *)
                echo "Usage: $0 {start|restart|reload}"
                exit 1
esac
